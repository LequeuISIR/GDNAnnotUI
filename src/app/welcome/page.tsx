"use client";

import { Opinion } from '../types';
import { OpinionAnnotation } from '../annotations/opinions/Opinions';
import { SummariesAnnotation } from '../annotations/summaries/Summaries';
import { type_colors, colors } from '../annotations/opinions/ColorSelector';
import { useAppContext } from "../AppContext";
import { useRouter } from "next/navigation";
import { useEffect } from 'react';
import Link from 'next/link';
import { ExplainCorrection, ExplainTask } from './components/explanations';

const example_opinion: Opinion = {
  opinionId: "introductionExample",
  text: "Qu'on arret de faire des p√¥les d'enseigments loin des eleves qui sont oblig√©s de faires des heures (des km) de trajets "
    + "pour apprendre un metier ou simplement venir en cursus classique, comme c'est le cas pour mon fils. pour cela il faut "
    + "developper les transports publics (train, bus ) "
    + "avec des chemins de traverse plutot que de passer toujours par des capitales departementales ou regionnales. Que ces transports "
    + "soient gratuits pour les mineurs, etudiant, chomeur et handicap√©. que l'on recrute du personnel dans les hopitaux car ils sont tout aussi "
    + "epuis√© que leur travail soit vraiement reconnu ! et qu'on arrete de faire une operation une rentabilit√© !",
  authorName: "ORGANISATION_DE_LETAT_ET_DES_SERVICES_PUBLICS",
}







export default function Welcome() {
  const router = useRouter();
  const { hasStarted } = useAppContext();

  useEffect(() => {
    if (hasStarted) {
      router.push("/annotations");
    }
  }, [hasStarted, router]);

  

  const {
    token, setToken, onStart, tokenError,
    summaries, setSummaries,
    isLoading, setIsLoading,
    segments, setSegments
  } = useAppContext();

  useEffect(() => {
    setSegments({})
    setSummaries([])
  }, []);

//   if (!token) {
//     try {
//       const saved_token = localStorage.getItem("token");
//       if (typeof (saved_token) === "string") {
//         setToken(saved_token);
//       }
//     } catch (err) {
//       console.error("Error:", err);
//     }
//   }

  return (
    <div style={{ margin: "0 auto", padding: "1rem", maxWidth: "80%" }}>
      <h1 style={{ textAlign: "center", marginBottom: "2rem" }}>
        Annotation du Grand D√©bat National
      </h1>

      <div className="welcome-content" style={{ marginBottom: "2rem", lineHeight: "1.6" }}>
        {/* Section 1 ‚Äì Intro */}
        <div style={{marginBottom: "2rem"}}>
            <h2>üëã Bienvenue</h2>
            <p>
           Merci de participer √† l‚Äôannotation des opinions exprim√©es dans le cadre du <strong>Grand D√©bat National</strong>. <br />
            Ce d√©bat, organis√© en 2019 √† l‚Äô√©chelle nationale, a permis √† des centaines de milliers de citoyens de partager en ligne leurs id√©es, leurs pr√©occupations et leurs propositions sur des sujets vari√©s (fiscalit√©, services publics, environnement, d√©mocratie‚Ä¶). 
            Vous trouverez plus d'informations sur https://granddebat.fr/. <br />
            Votre r√¥le est d‚Äôaider √† rendre ces contributions plus claires afin de mieux comprendre la diversit√© des opinions citoyennes en aidant les chercheurs √† analyser le contenu du d√©bat.
            </p>
        </div>

        {/* Section 2 ‚Äì T√¢che */}
        <h2>üìù Votre t√¢che</h2>
        <ExplainTask />

        {/* Section 3 ‚Äì Comment annoter */}
        <div style={{marginBottom: "2rem"}}>    
            <h2>üõ†Ô∏è Comment annoter ?</h2>
            <ol>
            <li>Le texte du citoyen appara√Æt dans un <strong>cadre bleu</strong> avec son th√®me g√©n√©ral en haut √† gauche (ex. <code>ORGANISATION_DE_LETAT_ET_DES_SERVICES_PUBLICS</code>).</li>
            <li>Chaque <strong>Unit√© argumentative</strong> est repr√©sent√©e par une couleur. Dans l'exemple ci-dessous, le <span style={{ boxShadow: `0 0 0 2px ${Object.keys(colors)[0]}` }}>cadre orange</span>  repr√©sente 
            une unit√© argumentative. en appuyant sur le bouton <strong>+</strong>, vous pouvez ajouter <span style={{ boxShadow: `0 0 0 2px ${Object.keys(colors)[1]}` }}>un nouveau cadre</span>, c'est √† dire une nouvelle id√©e abord√©e par le citoyen. </li>
            <li>
                Pour annoter, trouvez d'abord les diff√©rentes id√©es abord√©es dans le texte. Chaque id√©e correspondra √† un cadre de couleur diff√©rente. Ensuite, pour chaque id√©e, trouvez le type des diff√©rentes sous-parties du texte correspondant. 
                Pour chaque sous-partie, surlignez-la et cliquez sur le type correspondant dans le cadre qui apparait (<span style={{color: type_colors["claim"]}}><strong>Affirmation</strong> </span> , <span style={{color: type_colors["premise"]}}> <strong>Argument</strong></span>, <span style={{color: type_colors["solution"]}}> <strong>Solution</strong></span>). </li>
            <br />
            <ul>
                <li>Vous pouvez modifier le type ou l'unit√© argumentative d'un segment, ou le supprimer, en cliquant dessus.</li>
                <li>Vous pouvez R√©initialiser votre travail avec le bouton "r√©initialiser".</li>
                <li>Pas besoin d'annoter tout le texte: ignorez ce qui n'est pas pertinent.</li>
            </ul>
            </ol>
        </div>

        {/* Section 4 ‚Äì Exemple pratique */}
        <h2>üéØ Exemple pratique</h2>
        <p>Essayez directement ci-dessous üëá</p>
        <br />
        <div style={{ border: "2px solid grey", padding: "0.5rem", borderRadius: "1rem", marginBottom: "1rem" }}>
          <OpinionAnnotation opinion={example_opinion} />
          {isLoading && (
            <div style={{ textAlign: "center", marginTop: "1rem" }}>
              <h3>G√©n√©ration des arguments...</h3>
            </div>
          )}
          {summaries.length > 0 && (
            <SummariesAnnotation
              opinion={example_opinion}
              handleNext={() => { }}
            />
          )}
        </div>

        <p>Dans cet exemple, il y a trois id√©es donc <strong>trois unit√©es argumentatives</strong> :</p>
        <ul>
          <li>
            Th√®me <span style={{ boxShadow: `0 0 0 2px ${Object.keys(colors)[0]}` }}>transports publics</span> :
            une <span style={{color: type_colors["claim"]}}> <strong>Affirmation</strong> </span> (<i>il faut arreter l'√©ducation loins des √©l√®ves</i>) 
            + un <span style={{color: type_colors["premise"]}}> <strong>Argument</strong> </span> (<i>ils doivent faire des heures de trajets</i>)  
            + deux <span style={{color: type_colors["solution"]}}> <strong>Solutions</strong> </span> (<i>d√©velopper les transports publics de traverse et les rendre gratuits</i>).
          </li>
          <li>
            Th√®me <span style={{ boxShadow: `0 0 0 2px ${Object.keys(colors)[1]}` }}>h√¥pitaux</span> :
            une <span style={{color: type_colors["solution"]}}> <strong>Solution</strong> </span> (<i>recruter</i>) 
            + un <span style={{color: type_colors["premise"]}}> <strong>Argument</strong> </span> (<i>ils sont √©puis√©s</i>) 
            + une <span style={{color: type_colors["claim"]}}> <strong>Affirmation</strong> </span> (<i>qu'ils soient reconnus</i>).
          </li>
          <li>
            Th√®me <span style={{ boxShadow: `0 0 0 2px ${Object.keys(colors)[2]}` }}>rentabilit√© des services publics</span> :
            une <span style={{color: type_colors["claim"]}}> <strong>Affirmation</strong> </span> (<i>op√©ration de rentabilit√©</i>).
          </li>
        </ul>
        <br />
        {/* Section 5 ‚Äì Exemple termin√© */}
        <h2>‚úÖ Exemple de segmentation termin√©e</h2>
        <p>une fois l'annotation faite, vous devriez obtenir une segmentation semblable √† celle-ci:</p>
        <br />
        <p style={{ textAlign: "center" }}>
          <img
            src="/finished_example.png"
            alt="Exemple d'annotation termin√©e"
            style={{ maxWidth: "80%", height: "auto", border: "1px solid #ccc" }}
          />
        </p>
        <br />
        {/* Section 6 ‚Äì Apr√®s annotation */}
        <h2>üöÄ Apr√®s la segmentation</h2>
          <ExplainCorrection />
        <br />
        {/* Section 7 ‚Äì Feuille de route */}
        <h2>üß≠ Derni√®res informations</h2>
        <ul>
          <li>Si le texte est incompr√©hensible, haineux, ou trop long pour √™tre annot√©, utilisez le bouton <strong>‚Äúsignaler‚Äù</strong>.</li>
          <li>Vous trouverez le nombre d'annotations que vous avez d√©j√† r√©alis√©es dans la partie "Profil" en haut √† droite de la page. 
            Vous pouvez aussi recommencer des annotations que vous avez d√©j√† faites.</li>
        </ul>
        <br />
        <p>Vous trouverez trois autres exemples sur la <u><Link href="/examples" style={{color:"lightblue"}}>page d'exemples</Link></u>, qu'il est fortement conseill√© de faire avant de commencer l'annotation.</p>
        <p>Entrez ci-dessous votre token d'identification pour commencer l'annotation ! Votre token est unique et personnel.</p>
      </div>

      {/* Section 8 ‚Äì Token input */}
      <div style={{ textAlign: "center" }}>
        <input
          type="text"
          placeholder="Entrez votre token"
          value={token}
          onChange={(e) => setToken(e.target.value)}
          style={{
            padding: "0.5rem 1rem",
            fontSize: "1rem",
            marginBottom: "1rem",
            borderRadius: "8px",
            border: "1px solid #ccc",
            width: "250px",
          }}
        />
        {tokenError && (
          <div style={{ color: "red", marginTop: "0.5rem" }}>
            Token invalide. Veuillez r√©essayer.
          </div>
        )}
        <br />
        <button
          onClick={() => onStart(token)}
          className="button button-accept"
          style={{ padding: "1rem 2rem", fontSize: "1.2rem" }}
          disabled={!token.trim()}
        >
          J‚Äôai compris
        </button>
      </div>
    </div>
  );
}
